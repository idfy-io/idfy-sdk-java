/*
 * Idfy Deposit
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: support@idfy.io
 */

package io.idfy.deposit.models;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.Objects;
import java.util.Arrays;
import java.io.Serializable;

/**
 * Rent object information
 */
@JsonDeserialize(builder = RentObjectRequest.Builder.class)
public class RentObjectRequest  implements Serializable {
  private final String address;  // Default value is: null

  private final String address2;  // Default value is: null

  /**
   * Postal code
   */
  private final String postalCode;  // Default value is: null

  /**
   * City
   */
  private final String city;  // Default value is: null

  /**
   * Country
   */
  private final String country;  // Default value is: null

  private RentObjectRequest(Builder builder) {
      address = builder.address;
      address2 = builder.address2;
      postalCode = builder.postalCode;
      city = builder.city;
      country = builder.country;
  }

      /**
      * Get address
      * @return address
      **/
      public String getAddress() {return address;}

      /**
      * Get address2
      * @return address2
      **/
      public String getAddress2() {return address2;}

      /**
      * Postal code
      * @return postalCode
      **/
      public String getPostalCode() {return postalCode;}

      /**
      * City
      * @return city
      **/
      public String getCity() {return city;}

      /**
      * Country
      * @return country
      **/
      public String getCountry() {return country;}


  public static final class Builder {
      private String address;
      private String address2;
      private String postalCode;
      private String city;
      private String country;

    public Builder() {
    }

    public Builder(RentObjectRequest copy) {
        this.address = copy.getAddress();
        this.address2 = copy.getAddress2();
        this.postalCode = copy.getPostalCode();
        this.city = copy.getCity();
        this.country = copy.getCountry();
    }

    public Builder withAddress(String address) {
      this.address = address;
      return this;
    }

    public Builder withAddress2(String address2) {
      this.address2 = address2;
      return this;
    }

    public Builder withPostalCode(String postalCode) {
      this.postalCode = postalCode;
      return this;
    }

    public Builder withCity(String city) {
      this.city = city;
      return this;
    }

    public Builder withCountry(String country) {
      this.country = country;
      return this;
    }


    public RentObjectRequest build() { return new RentObjectRequest(this); }
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RentObjectRequest rentObjectRequest = (RentObjectRequest) o;
    return Objects.equals(this.address, rentObjectRequest.address) &&
        Objects.equals(this.address2, rentObjectRequest.address2) &&
        Objects.equals(this.postalCode, rentObjectRequest.postalCode) &&
        Objects.equals(this.city, rentObjectRequest.city) &&
        Objects.equals(this.country, rentObjectRequest.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, address2, postalCode, city, country);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RentObjectRequest {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
