/*
 * Idfy Deposit
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: support@idfy.io
 */

package io.idfy.deposit.models;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.Objects;
import java.util.Arrays;
import io.idfy.deposit.models.IFrameSettings;
import io.idfy.deposit.models.RedirectSettings;
import io.idfy.deposit.models.TenantsResponseFlow;
import io.idfy.deposit.models.UI;
import java.io.Serializable;

/**
 * Optional sign options for the landlord. Specify this if a manual signature is required from the landlord or a representative.
 */
@JsonDeserialize(builder = LandlordSignOptions.Builder.class)
public class LandlordSignOptions  implements Serializable {
  private final UI ui;  // Default value is: null

  /**
   * Defines the flow to use.
   */
  private final TenantsResponseFlow flow;  // Default value is: null

  private final IFrameSettings iframeSettings;  // Default value is: null

  private final RedirectSettings redirectSettings;  // Default value is: null

  private LandlordSignOptions(Builder builder) {
      ui = builder.ui;
      flow = builder.flow;
      iframeSettings = builder.iframeSettings;
      redirectSettings = builder.redirectSettings;
  }

      /**
      * Get ui
      * @return ui
      **/
      public UI getUi() {return ui;}

      /**
      * Defines the flow to use.
      * @return flow
      **/
      public TenantsResponseFlow getFlow() {return flow;}

      /**
      * Get iframeSettings
      * @return iframeSettings
      **/
      public IFrameSettings getIframeSettings() {return iframeSettings;}

      /**
      * Get redirectSettings
      * @return redirectSettings
      **/
      public RedirectSettings getRedirectSettings() {return redirectSettings;}


  public static final class Builder {
      private UI ui;
      private TenantsResponseFlow flow;
      private IFrameSettings iframeSettings;
      private RedirectSettings redirectSettings;

    public Builder() {
    }

    public Builder(LandlordSignOptions copy) {
        this.ui = copy.getUi();
        this.flow = copy.getFlow();
        this.iframeSettings = copy.getIframeSettings();
        this.redirectSettings = copy.getRedirectSettings();
    }

    public Builder withUi(UI ui) {
      this.ui = ui;
      return this;
    }

    public Builder withFlow(TenantsResponseFlow flow) {
      this.flow = flow;
      return this;
    }

    public Builder withIframeSettings(IFrameSettings iframeSettings) {
      this.iframeSettings = iframeSettings;
      return this;
    }

    public Builder withRedirectSettings(RedirectSettings redirectSettings) {
      this.redirectSettings = redirectSettings;
      return this;
    }


    public LandlordSignOptions build() { return new LandlordSignOptions(this); }
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LandlordSignOptions landlordSignOptions = (LandlordSignOptions) o;
    return Objects.equals(this.ui, landlordSignOptions.ui) &&
        Objects.equals(this.flow, landlordSignOptions.flow) &&
        Objects.equals(this.iframeSettings, landlordSignOptions.iframeSettings) &&
        Objects.equals(this.redirectSettings, landlordSignOptions.redirectSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ui, flow, iframeSettings, redirectSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LandlordSignOptions {\n");
    
    sb.append("    ui: ").append(toIndentedString(ui)).append("\n");
    sb.append("    flow: ").append(toIndentedString(flow)).append("\n");
    sb.append("    iframeSettings: ").append(toIndentedString(iframeSettings)).append("\n");
    sb.append("    redirectSettings: ").append(toIndentedString(redirectSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
