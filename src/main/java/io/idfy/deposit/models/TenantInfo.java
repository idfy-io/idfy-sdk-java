/*
 * Idfy Deposit
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: support@idfy.io
 */

package io.idfy.deposit.models;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.Objects;
import java.util.Arrays;
import io.idfy.deposit.models.Address;
import io.idfy.deposit.models.Mobile;
import java.io.Serializable;

/**
 * Tenant information
 */
@JsonDeserialize(builder = TenantInfo.Builder.class)
public class TenantInfo  implements Serializable {
  private final String firstName;  // Default value is: null

  private final String lastName;  // Default value is: null

  private final Mobile mobile;  // Default value is: null

  /**
   * The tenants email address
   */
  private final String email;  // Default value is: null

  /**
   * The tenants nationality
   */
  private final String nationality;  // Default value is: null

  /**
   * The tenants address
   */
  private final Address address;  // Default value is: null

  private TenantInfo(Builder builder) {
      firstName = builder.firstName;
      lastName = builder.lastName;
      mobile = builder.mobile;
      email = builder.email;
      nationality = builder.nationality;
      address = builder.address;
  }

      /**
      * Get firstName
      * @return firstName
      **/
      public String getFirstName() {return firstName;}

      /**
      * Get lastName
      * @return lastName
      **/
      public String getLastName() {return lastName;}

      /**
      * Get mobile
      * @return mobile
      **/
      public Mobile getMobile() {return mobile;}

      /**
      * The tenants email address
      * @return email
      **/
      public String getEmail() {return email;}

      /**
      * The tenants nationality
      * @return nationality
      **/
      public String getNationality() {return nationality;}

      /**
      * The tenants address
      * @return address
      **/
      public Address getAddress() {return address;}


  public static final class Builder {
      private String firstName;
      private String lastName;
      private Mobile mobile;
      private String email;
      private String nationality;
      private Address address;

    public Builder() {
    }

    public Builder(TenantInfo copy) {
        this.firstName = copy.getFirstName();
        this.lastName = copy.getLastName();
        this.mobile = copy.getMobile();
        this.email = copy.getEmail();
        this.nationality = copy.getNationality();
        this.address = copy.getAddress();
    }

    public Builder withFirstName(String firstName) {
      this.firstName = firstName;
      return this;
    }

    public Builder withLastName(String lastName) {
      this.lastName = lastName;
      return this;
    }

    public Builder withMobile(Mobile mobile) {
      this.mobile = mobile;
      return this;
    }

    public Builder withEmail(String email) {
      this.email = email;
      return this;
    }

    public Builder withNationality(String nationality) {
      this.nationality = nationality;
      return this;
    }

    public Builder withAddress(Address address) {
      this.address = address;
      return this;
    }


    public TenantInfo build() { return new TenantInfo(this); }
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TenantInfo tenantInfo = (TenantInfo) o;
    return Objects.equals(this.firstName, tenantInfo.firstName) &&
        Objects.equals(this.lastName, tenantInfo.lastName) &&
        Objects.equals(this.mobile, tenantInfo.mobile) &&
        Objects.equals(this.email, tenantInfo.email) &&
        Objects.equals(this.nationality, tenantInfo.nationality) &&
        Objects.equals(this.address, tenantInfo.address);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, lastName, mobile, email, nationality, address);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TenantInfo {\n");
    
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
